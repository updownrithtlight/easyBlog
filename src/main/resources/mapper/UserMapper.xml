<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.technerd.easyblog.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.technerd.easyblog.entity.User" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="del_flag" property="delFlag" jdbcType="BIT" />
        <result column="create_by" property="createBy" jdbcType="INTEGER" />
        <result column="update_by" property="updateBy" jdbcType="INTEGER" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
        <result column="user_name" property="userName" jdbcType="VARCHAR" />
        <result column="user_display_name" property="userDisplayName" jdbcType="VARCHAR" />
        <result column="user_pass" property="userPass" jdbcType="VARCHAR" />
        <result column="user_email" property="userEmail" jdbcType="VARCHAR" />
        <result column="gender" property="gender" jdbcType="BIT" />
        <result column="email_enable" property="emailEnable" jdbcType="BIT" />
        <result column="is_admin" property="isAdmin" jdbcType="CHAR" />
        <result column="user_avatar" property="userAvatar" jdbcType="VARCHAR" />
        <result column="status" property="status" jdbcType="BIT" />
        <result column="user_desc" property="userDesc" jdbcType="VARCHAR" />
        <result column="salt" property="salt" jdbcType="VARCHAR" />
    </resultMap>
    <sql id="Base_Column_List" >
        id, del_flag, create_by, update_by, create_time, update_time, user_name, user_display_name,
        user_pass, user_email, gender, email_enable, is_admin, user_avatar, status, user_desc,
        salt
    </sql>
  <sql id="normal">0</sql>
  <sql id="ban">1</sql>
  <sql id="deleted">2</sql>

  <select id="findByRoleId" resultMap="BaseResultMap">
      SELECT
          t.id,
          t.user_name,
          t.user_display_name,
          t.user_pass,
          t.user_email,
          t.user_avatar,
          t.user_desc,
          t.user_site,
          t.is_admin,
          t.email_enable,
          t.login_enable,
          t.login_last,
          t.login_error,
          t.status,
          t.create_time
      FROM
          user_role_ref r,
          user t
      WHERE
          r.role_id = #{roleId} AND
          r.user_id = t.id
          AND t.del_flag = 0
          AND r.del_flag = 0
      ORDER BY
          t.id DESC
  </select>

    <select id="findByRoleIdAndCondition" resultMap="BaseResultMap">
      SELECT
          t.id,
          t.user_name,
          t.user_display_name,
          t.user_pass,
          t.user_email,
          t.user_avatar,
          t.user_desc,
          t.user_site,
          t.is_admin,
          t.email_enable,
          t.login_enable,
          t.login_last,
          t.login_error,
          t.status,
          t.create_time
      FROM
          user_role_ref r,
          user t
      WHERE
          t.del_flag = 0 AND
          r.del_flag = 0 AND
          r.role_id = #{roleId} AND
          r.user_id = t.id
         <if test="user.status != null and user.status != ''">
              AND t.status = #{user.status}
         </if>
          <if test="user.userName != null and user.userName != ''">
              AND t.user_name LIKE CONCAT('%', #{user.userName}, '%')
          </if>
          <if test="user.userDisplayName != null and user.userDisplayName != ''">
              AND t.user_display_name LIKE CONCAT('%', #{user.userDisplayName}, '%')
          </if>
          <if test="user.userEmail != null and user.userEmail != ''">
              AND t.user_email LIKE CONCAT('%', #{user.userEmail}, '%')
          </if>
        <if test="user.userSite != null and user.userSite != ''">
            AND t.user_site LIKE CONCAT('%', #{user.userSite}, '%')
        </if>
      ORDER BY
          t.id DESC
  </select>

  <select id="findByWithoutRole" resultMap="BaseResultMap">
      SELECT
          id,
          user_name,
          user_display_name,
          user_pass,
          user_email,
          user_avatar,
          user_desc,
          user_site,
          is_admin,
          email_enable,
          login_enable,
          login_last,
          login_error,
          STATUS,
          create_time
      FROM
          user
      WHERE
          id NOT IN ( SELECT user_id FROM user_role_ref )
          AND t.del_flag = 0
  </select>

    <select id="getTodayCount" resultType="java.lang.Integer">
        SELECT
            count( id )
        FROM
            post
        WHERE
            to_days( create_time ) = to_days( now( ) )
            AND t.del_flag = 0
    </select>

    <select id="getUserPostRanking" resultMap="BaseResultMap">
        SELECT
            count( * ) postCount,
            u.id,
            u.user_name,
            u.user_avatar,
            u.user_display_name,
            u.login_last,
            u.create_time
        FROM
            post p,
            user u
        WHERE
            p.user_id = u.id
            AND p.del_flag = 0
            AND u.del_flag = 0
        GROUP BY
            p.user_id
        ORDER BY
            postCount DESC
            LIMIT #{value}
    </select>

    <select id="getLatestUser" resultMap="BaseResultMap">
        SELECT
            id,
            user_name,
            user_avatar,
            user_display_name,
            create_time
        FROM
            user
        WHERE
            del_flag = 0
        ORDER BY
            create_time DESC
            LIMIT #{value}
    </select>
</mapper>