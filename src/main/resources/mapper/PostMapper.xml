<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.technerd.easyblog.mapper.PostMapper">
    <resultMap id="BaseResultMap" type="com.technerd.easyblog.entity.Post" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="del_flag" property="delFlag" jdbcType="BIT" />
        <result column="create_by" property="createBy" jdbcType="INTEGER" />
        <result column="update_by" property="updateBy" jdbcType="INTEGER" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
        <result column="user_id" property="userId" jdbcType="INTEGER" />
        <result column="post_title" property="postTitle" jdbcType="VARCHAR" />
        <result column="post_type" property="postType" jdbcType="VARCHAR" />
        <result column="post_content" property="postContent" jdbcType="VARCHAR" />
        <result column="post_url" property="postUrl" jdbcType="VARCHAR" />
        <result column="post_summary" property="postSummary" jdbcType="VARCHAR" />
        <result column="post_thumbnail" property="postThumbnail" jdbcType="VARCHAR" />
        <result column="post_status" property="postStatus" jdbcType="VARCHAR" />
        <result column="post_views" property="postViews" jdbcType="VARCHAR" />
        <result column="post_likes" property="postLikes" jdbcType="VARCHAR" />
        <result column="comment_size" property="commentSize" jdbcType="VARCHAR" />
        <result column="post_source" property="postSource" jdbcType="VARCHAR" />
        <result column="allow_comment" property="allowComment" jdbcType="VARCHAR" />
    </resultMap>
    <sql id="Base_Column_List" >
        id, del_flag, create_by, update_by, create_time, update_time, user_id, post_title,
        post_type, post_content, post_url, post_summary, post_thumbnail, post_status, post_views,
        post_likes, comment_size, post_source, allow_comment
    </sql>
    <sql id="publish_status">0</sql>
    <sql id="draft_status">1</sql>
    <sql id="trash_status">2</sql>


    <select id="findTopFive" resultMap="BaseResultMap">
        SELECT
            id,
            user_id,
            post_title,
            post_type,
            post_url,
            post_summary,
            post_thumbnail,
            create_time,
            post_status,
            post_views,
            post_likes,
            comment_size
        FROM
            post
        WHERE
            post_type = 'post'
            AND post_status = 0
            AND del_flag = 0
        ORDER BY
            create_time DESC
            LIMIT 5
    </select>

    <select id="listYears" resultType="java.lang.Integer">
        SELECT DISTINCT YEAR
            ( create_time )
        FROM
            post
        WHERE
            post_status = 0
            AND del_flag = 0
    </select>

    <select id="findPostGroupByYearAndMonth" resultMap="BaseResultMap">
        SELECT
            YEAR  ( create_time ) YEAR,
            MONTH ( create_time ) MONTH,
            COUNT( id ) count
        FROM
            post
        WHERE
            post_status = 0
            AND post_type = 'post'
            AND del_flag = 0
        GROUP BY
            YEAR ( create_time ),
            MONTH ( create_time )
        ORDER BY
            YEAR DESC,
        MONTH DESC
    </select>

    <select id="findPostGroupByYear" resultMap="BaseResultMap">
        SELECT
            YEAR ( create_time ) year,
            COUNT( id ) count
        FROM
            post
        WHERE
            post_status = 0
            AND post_type = 'post'
            AND del_flag = 0
        GROUP BY
            YEAR ( create_time )
        ORDER BY
        YEAR DESC
    </select>

    <select id="findPostByYearAndMonth" resultType="com.technerd.easyblog.model.dto.PostSimpleDto">
        SELECT
            id,
            post_url,
            post_title,
            create_time,
            YEAR ( create_time ) year,
            MONTH ( create_time ) month 
        FROM
            post 
        WHERE
            post_status = 0 
            AND post_type = 'post' 
            AND YEAR ( create_time ) = #{year} and month(create_time)=#{month}
            AND del_flag = 0
        ORDER BY
            create_time DESC
    </select>

    <select id="findPostByYear" resultType="com.technerd.easyblog.model.dto.PostSimpleDto">
        SELECT
            id,
            post_url,
            post_title,
            YEAR ( create_time ) year 
        FROM
            post 
        WHERE
            post_status = 0 
            AND post_type = 'post' 
            AND YEAR ( create_time ) = #{year}
            AND del_flag = 0
        ORDER BY
            create_time DESC
    </select>


    <select id="pagingPostByYearAndMonth" resultType="com.technerd.easyblog.entity.Post">
        SELECT
            id,
            user_id,
            post_title,
            post_type,
            post_url,
            post_summary,
            post_thumbnail,
            create_time,
            post_status,
            post_views,
            post_likes,
            comment_size,
            YEAR ( create_time ) year,
            MONTH ( create_time ) month 
        FROM
            post 
        WHERE
            post_status = 0 
            AND post_type = 'post' 
            AND YEAR ( create_time ) = #{year} and month(create_time)= #{month}
            AND del_flag = 0
        ORDER BY
            create_time DESC
    </select>

    <select id="pagingPostByCategoryIdsAndPostStatus" resultType="com.technerd.easyblog.entity.Post">
        SELECT
            t.id,
            t.user_id,
            t.post_title,
            t.post_type,
            t.post_url,
            t.post_summary,
            t.post_thumbnail,
            t.create_time,
            t.post_status,
            t.post_views,
            t.post_likes,
            t.comment_size
        FROM
        post t, post_category_ref r
        <where>
            r.cate_id IN
            <foreach collection="cateIds" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
            AND
            r.post_id = t.id AND
            t.post_status = #{status}
            AND t.del_flag = 0
            AND r.del_flag = 0
        </where>
        ORDER BY t.create_time DESC
    </select>

    <select id="pagingPostsByTagIdAndPostStatus" resultType="com.technerd.easyblog.entity.Post">
        SELECT
            t.id,
            t.user_id,
            t.post_title,
            t.post_type,
            t.post_url,
            t.post_summary,
            t.post_thumbnail,
            t.create_time,
            t.post_status,
            t.post_views,
            t.post_likes,
            t.comment_size 
        FROM
            post t,
            post_tag_ref r 
        WHERE
            r.tag_id = #{tagId} AND
            r.post_id = t.id AND 
            t.post_status = #{status}
            AND t.del_flag = 0
            AND r.del_flag = 0
        ORDER BY
            t.create_time DESC
    </select>

    <select id="getPostViewsSum" resultType="java.lang.Long">
        SELECT
            sum( post_views ) 
        FROM
            post
        WHERE
            del_flag = 0
    </select>

    <select id="findPostsByCategoryId" resultType="com.technerd.easyblog.entity.Post">
        SELECT
            t.id,
            t.user_id,
            t.post_title,
            t.post_type,
            t.post_url,
            t.post_summary,
            t.post_thumbnail,
            t.create_time,
            t.post_status,
            t.post_views,
            t.post_likes,
            t.comment_size 
        FROM
            post t,
            post_category_ref r 
        WHERE
            r.cate_id = #{value} AND
            r.post_id = t.id
            AND t.del_flag = 0
            AND r.del_flag = 0
        ORDER BY
            t.create_time DESC
    </select>

    <select id="findByPostIdAfter" resultType="com.technerd.easyblog.entity.Post">
         SELECT
            id,
            user_id,
            post_title,
            post_type,
            post_url,
            post_summary,
            post_thumbnail,
            create_time,
            post_status,
            post_views,
            post_likes,
            comment_size
        FROM
            post
        WHERE
            id &gt;#{postId}
            AND post_type = #{postType}
            AND post_status = 0
            AND del_flag = 0
        ORDER BY
        create_time DESC
        LIMIT 1
    </select>

    <select id="findByPostIdBefore" resultType="com.technerd.easyblog.entity.Post">
        SELECT
            id,
            user_id,
            post_title,
            post_type,
            post_url,
            post_summary,
            post_thumbnail,
            create_time,
            post_status,
            post_views,
            post_likes,
            comment_size
        FROM
            post
        WHERE
            id &lt;#{postId} AND post_type = #{postType}
             AND post_status = 0
             AND del_flag = 0
        ORDER BY
        create_time DESC
        LIMIT 1
    </select>

    <select id="selectMaxPostUpdate" resultType="java.util.Date">
        SELECT
            MAX( update_time )
        FROM
            post
        WHERE
            del_flag = 0
    </select>

    <select id="selectAllPostIds" resultType="java.lang.Long">
        SELECT
            id
        FROM
            post
        WHERE
            del_flag = 0
    </select>

    <update id="resetCommentSize">
        UPDATE post t 
        SET t.comment_size = ( SELECT COUNT( * ) FROM comment c WHERE c.post_id = #{value} AND c.comment_status = 0 ) 
        WHERE
            t.id = #{value}
            AND del_flag = 0
    </update>

    <update id="incrPostLikes">
        UPDATE post
        SET post_likes = post_likes + 1
        WHERE
            id = #{value}
            AND del_flag = 0
    </update>

    <update id="incrPostViews">
        UPDATE post
        SET post_views = post_views + 1
        WHERE
            id = #{value}
            AND del_flag = 0
    </update>

    <update id="updatePostSummary">
        UPDATE post
        SET post_summary = #{summary}
        WHERE
            id = #{postId}
            AND del_flag = 0
    </update>

    <delete id="deleteByUserId">
        DELETE 
        FROM
            post 
        WHERE
            user_id = #{value}
            AND del_flag = 0
    </delete>

    <select id="selectIdsByUserId" resultType="java.lang.Long">
       SELECT
            id
       FROM
            post 
       WHERE
            user_id = #{userId}
            AND del_flag = 0
    </select>

    <select id="getTodayCount" resultType="java.lang.Integer">
        SELECT
            count( id )
        FROM
            post
        WHERE
            to_days( create_time ) = to_days( now( ) )
            AND del_flag = 0
    </select>

    <select id="getPostRankingByPostView" resultType="com.technerd.easyblog.model.dto.PostSimpleDto">
        SELECT
            id,
            post_title,
            user_id,
            post_views,
            create_time
        FROM
            post
        WHERE
            post_type = 'post' AND
            del_flag = 0
        ORDER BY
            post_views DESC
            LIMIT #{limit}
    </select>

    <select id="getPostRankingByUserIdAndPostView" resultType="com.technerd.easyblog.model.dto.PostSimpleDto">
        SELECT
            id,
            post_title,
            user_id,
            post_views
        FROM
            post
        WHERE
            user_id = #{userId}
            AND del_flag = 0
        ORDER BY
            post_views DESC
            LIMIT #{limit}
    </select>

    <select id="findPostByCateName" resultType="com.technerd.easyblog.entity.Post">
        SELECT
            t.id,
            t.user_id,
            t.post_title,
            t.post_type,
            t.post_url,
            t.post_summary,
            t.post_thumbnail,
            t.create_time,
            t.post_status,
            t.post_views,
            t.post_likes,
            t.comment_size
        FROM
            post t,
            post_category_ref r,
            category c
        WHERE
            c.cate_name = #{cateName} AND
            c.id = r.cate_id  AND
            r.post_id = t.id
            AND t.del_flag = 0
            AND r.del_flag = 0
            AND c.del_flag = 0
        ORDER BY
            t.create_time DESC
    </select>
</mapper>